<library>
	<script src="../auth/md5.js" />
	<class name="roomAccountView" extends="view">
		<switch>
			<when property="$as3">
				<passthrough>
					import flash.net.Responder;
				</passthrough>
			</when>
		</switch>
		<attribute name="responder" />
		<attribute name="responderUser" />
		<attribute name="error" type="string" value="null"/>
		<validation name="validation" />
		<view name="accountAttributes" width="300" bgcolor="#DDDDDD" cornerradius="10" height="300">
			<simplelayout spacing="20" />
			<view name="accountAttributesView">		
				<simplelayout spacing="30" axis="x"/>
				<view layout="axis:y; spacing:15" yoffset="-10" xoffset="-10">						
					<text datapath="dsetLang:/language/string[@id='5']" text="$path{'value/text()'}" />
					<text datapath="dsetLang:/language/string[@id='7']" text="$path{'value/text()'}" />
					<text datapath="dsetLang:/language/string[@id='8']" text="$path{'value/text()'}" />
					<text datapath="dsetLang:/language/string[@id='9']" text="$path{'value/text()'}" />		
					<text datapath="dsetLang:/language/string[@id='10']" text="$path{'value/text()'}" />
					<text datapath="dsetLang:/language/string[@id='11']" text="$path{'value/text()'}" />	
				</view>
				<view name="accountVaulesView" layout="axis:y; spacing:8" yoffset="-5">
					<attribute name="elementsWidth" value="150"/>			
					<edittext name="password" width="${parent.elementsWidth}"  password="true"/>
					<edittext name="passwordRe" width="${parent.elementsWidth}" password="true"/>
					<edittext name="firstName" width="${parent.elementsWidth}" />
					<edittext name="lastName" width="${parent.elementsWidth}" />		
					<edittext name="email" width="${parent.elementsWidth}" />
					<combobox name="location" width="${parent.elementsWidth}" editable="false">
						<textlistitem text="Turkey" />
						<textlistitem text="England" />
						<textlistitem text="Germany" />
						<textlistitem text="ABD" />
					</combobox>
				</view>
			</view>
			<view align="center" layout="axis:x; spacing:30">
				<button name="saveicon" width="32" height="32"> 
					<view resource="../../../resources/icons/save_icon.png"
						align="center" valign="middle"/>
					<!--<text name="saveicontext" y="${parent.y+20}" 
						datapath="dsetLang:/language/string[@id='39']" text="$path{'value/text()'}"
						visible="false" />-->
					<handler name="onclick">
						classroot.updateOperation();
					</handler>
				</button> 
				<button name="refreshicon" width="32" height="32">
					<view resource="../../../resources/icons/refresh_icon.png"
						align="center" valign="middle"/>
					<handler name="onclick">
						classroot.refreshAccount();
					</handler>	
				</button>
			</view>			
		</view>
		<handler name="onstage" reference="conn">
			if (conn.stage == 2) {
				responder = new Responder(this.responderResult,
						this.responderStatus);
				responderUser = new Responder(this.responderResultUser,
						this.responderStatus);
			}
		</handler>
		<method name="responderResult" args="result">
			//Debug.info("Respond result:",result);
		</method>
		<!--method gets user informations from server and set 
			the profile text field with these values-->
		<method name="responderResultUser" args="result">
			var valuesView = accountAttributes.accountAttributesView.accountVaulesView;
			valuesView.password.clearText();
			valuesView.passwordRe.clearText();
			valuesView.firstName.setAttribute("text", result['firstname']);
			valuesView.lastName.setAttribute("text", result['lastname']);
			valuesView.email.setAttribute("text", result['email']);
		</method>
		<method name="responderStatus" args="status">
			//Debug.info("Respond status:",status);
		</method>
		<!--getters-->
		<method name="getPassword">
			return accountAttributes.accountAttributesView.accountVaulesView.password.text;
		</method>
		<method name="getPasswordRe">
			return accountAttributes.accountAttributesView.accountVaulesView.passwordRe.text;
		</method>
		<method name="getFirstname">
			return accountAttributes.accountAttributesView.accountVaulesView.firstName.text;
		</method>
		<method name="getLastname">
			return accountAttributes.accountAttributesView.accountVaulesView.lastName.text;
		</method>
		<method name="getEmail">
			return accountAttributes.accountAttributesView.accountVaulesView.email.text;
		</method>
		<method name="getLocation">
			return accountAttributes.accountAttributesView.accountVaulesView.location.text;
		</method>
		<!--updates user informations on db with the new ones-->
		<method name="updateOperation"><![CDATA[
			var password = this.getPassword();
			var passwordRe = this.getPasswordRe();
			var firstname = this.getFirstname();
			var lastname = this.getLastname();
			var email = this.getEmail();
			var location = this.getLocation();
			var form = new Object;
			form['firstname'] = firstname;
			form['lastname'] = lastname;
			form['email'] = email;
			form['location'] = location;
			//Debug.write("form : %w %w",form['firstname'],form['lastname']);
			if (validation.comparePasswords(password, passwordRe)) {
				if (email != '') {
					if (validation.checkEmail(email)) {
						if (password != '') {
							var hash = hex_md5(this.getPassword());
							form['password'] = hash;
						}
						conn._nc.call("databaseservice.updateUser", responder,
								loginScreen.getUsername(), form);
						Debug.info("updated user informations");
						notificationWindow.addMessage("info","updated user informations");
					}
				} else {
					conn._nc.call("databaseservice.updateUser", responder,
							loginScreen.getUsername(), form);
					Debug.info("updated user informations");
					notificationWindow.addMessage("info","updated user informations");
				}
			}
		]]>
		</method>
		<!--method to refresh user profile informations-->
		<method name="refreshAccount">
			conn._nc.call("databaseservice.fetchUser", responderUser,
					loginScreen.getUsername());
		</method>		
	</class>	
</library>
