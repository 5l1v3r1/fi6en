<library>
	<include href="../remote/netStream.lzx" />
	<!--class for a publisher view : publishing video and recording-->
	<class name="publisher" extends="view">
		<microphone name="micc" capturing="true" silencelevel="30" gain="40"/>
		<camera name="camm" capturing="false" />	
		<!--netStream object for publish operation-->
		<netStream name="streamPublish" type="rtmp" rtmp="${conn}"/>
		
		<!--view for video and recording-->
		<view name="broadcastView">			
			<simplelayout spacing="30" />
			<videoview name="broadcasting" width="220" height="200" type="rtmp"> 
				<camera name="mycam" />
			</videoview>
			<view name="recordingView" visible="${parent.broadcasting.mycam.show}">
				<view name="recordButton" resource="../resources/icons/record_button.png"
					onmouseover="recordText.setAttribute('visible',true)"
					onmouseout="recordText.setAttribute('visible',false)"
					onclick="classroot.record()">
					<text name="recordText" visible="false"
						y="${parent.y-20}"
						datapath="dsetLang:/language/string[@id='28']" text="$path{'value/text()'}"/>
				</view>
				<view name="stopRecordButton" x="${parent.recordButton.x+50}" 
					resource="../resources/icons/pause_button.png" 
					onmouseover="stopRecordText.setAttribute('visible',true)"
					onmouseout="stopRecordText.setAttribute('visible',false)"
					onclick="classroot.stopRecording()">
					<text name="stopRecordText" visible="false"
						y="${parent.y-20}"
						datapath="dsetLang:/language/string[@id='29']" text="$path{'value/text()'}"/>
				</view>
			</view>
			
		</view>	
			
		<!--publish video-->
		<method name="publish" args="streamName">			
			streamPublish.setAttribute("url", streamName);
			streamPublish.setAttribute("mic", micc);
			streamPublish.setAttribute("cam", camm);
			camm.setMode(220, 200, 22, false);
			camm.setQuality(32768, 0);
			micc.setAttribute("silencelevel",5);
			broadcastView.broadcasting.mycam.setAttribute("show",true);			
			streamPublish.broadcast();
			Debug.info("started broadcasting:", streamPublish.url);
		</method>
		<!--stops publishing video-->
		<method name="stopPublishing">
			streamPublish.stop();
			//streamPublish.setAttribute('publishing', false);
			broadcastView.broadcasting.mycam.setAttribute('show', false);
		</method>
		<!--record video-->
		<method name="record">
			var streamName= loginScreen.getUsername();
			//streamPublish.closeStream();
			//streamPublish.publishVideo(streamName, true, true);
			Debug.info("Recording started");
			conn._nc.call("streamservice.recordShow", null, streamName);
			streamPublish.setAttribute("recordingg", true);
		</method>
		<!--stop recording-->
		<method name="stopRecording">
			if (streamPublish.recordingg) {
				Debug.info("Recording stopped");
				conn._nc.call("streamservice.stopRecordingShow", null,
						loginScreen.getUsername());
				streamPublish.setAttribute("recordingg", false);
			}
			else {
				Debug.warn("There is no stream is being recorded now!");
			}
		</method>
	</class>
	
</library>