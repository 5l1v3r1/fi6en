<library>
	<include href="sharedObject.lzx" />
	<include href="chatview.lzx"/>
	
	<!--server connection initialization class-->
	<class name="connect" extends="node" oninit="initConnection()">
		<!--for swf10 runtime-->
		<switch>
			<when property="$as3">
				<passthrough>
					import flash.net.*;
					import flash.events.*;
					import flash.media.Camera;
					import flash.media.Microphone;
				</passthrough>
			</when>
		</switch>			
		
		<attribute name="_conn"/>
		<attribute name="_sharedObject"/>
		
		<attribute name="stream1" />
		<attribute name="stream2" />
		
		<method name="initConnection"><![CDATA[	
			//creating rtmpconnection 
			this._conn = new NetConnection();
			//this.stream1= new NetStream(this._conn);
			
			this._conn.connect("rtmp://localhost/Red5SharedObject/");
			this._conn.client=this;
			this._sharedObject= new lz.sharedObject();
			
			//this.broadcastVideo();
			/*add the listeners accroding to the runtime */	
			if ($swf8) {
				Debug.write("as2 env.");
				_conn.onStatus= function (info) {
					if (info.code=="NetConnection.Connect.Success") {
						Debug.write("The connection attempt succeeded.");
					}
				}
			}			
			
			else {
				Debug.write("as3 env.");
				this._conn.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				this._conn.addEventListener(AsyncErrorEvent.ASYNC_ERROR, errorHandler);
				//this.stream1.addEventListener(NetStatusEvent.NET_STATUS, streamHandler);
			}			
			this._sharedObject.connect("chat", this._conn, true);			
		]]></method>
		
		<method name="netStatusHandler" args="event">
			switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    Debug.write("The connection attempt succeeded.");
                    stream1= new NetStream(this._conn);
                    stream2= new NetStream(this._conn);
                    stream1.attachCamera(Camera.getCamera());
                    broadcasting._attachStream(stream1);
                    live._attachStream(stream2);
                    stream1.publish("broadcastVideo","live");
                    stream2.play("broadcastVideo");
                    break;
                 
                case "NetConnection.Connect.Failed":
                	Debug.write("The connection attempt failed.");
                    break;
                case "NetConnection.Connect.Rejected":
                    Debug.write("The connection attempt did not have permission to access the application.");
                    break;
                case "NetStream.Publish.BadName":
                	Debug.write("Please check the name of the publishing stream" );
                	break;

            }
		</method>
		
		<method name="errorHandler" args="error">
			Debug.write(error.error);
		</method>
		
		<method name="streamHandler" args="event">
			Debug.write(event.info.code);
		</method>
		
		<method name="writeSharedObject" args="message">
			//Debug.write("sending to the shared object");
			this._sharedObject.send("writeMessage",message);
		</method>
		
		<!--<method name="broadcastVideo">
			live.setAttribute('stream',stream1);
			if (cam.show == false) {
				Debug.write("broadcasting camera");
				cam.setAttribute('show', true);
				//live.stream.setAttribute('rtmp',this._conn);
				//live.stream.attachCamera(cam);
				//live.stream.play('url', 'room1');
				//live.stream.setAttribute('cam',cam);
				//live.stream.setAttribute('broadcasting',true);
				//live.stream.broadcast();
			} 
			else {
			live.stream.stop();
			cam.setAttribute('show', false);
			}
		</method>-->		
	</class>	
</library>