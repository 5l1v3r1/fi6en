<library>
	<class name="netStream" extends="node">
		<switch>
			<when property="$as3">
				<passthrough>
					import flash.net.*;
					import flash.events.*;
					import flash.media.Camera;
                    import flash.media.Microphone;
				</passthrough>
			</when>
		</switch>
		
		<attribute name="stream" value="null"/>
		<attribute name="publishing" type="boolean" value="false"/>
		<attribute name="playing" type="boolean" value="false"/>
		<attribute name="recording" type="boolean" value="false"/>
		
		<method name="createStream" args="conn">
			this.stream= new NetStream(conn);
			this.stream.client=this;
			this.stream.addEventListener(NetStatusEvent.NET_STATUS, netStreamHandler);
			this.stream.addEventListener(NetStatusEvent.NET_STATUS, onPlayStatus);
		</method>
		
		<method name="netStreamHandler" args="event">
	        switch (event.info.code) {
		        case "NetStream.Publish.Start":
					Debug.info("Stream publish started");
					this.setAttribute('publishing',true);
					//broadcasting._attachStream(this.stream1);
					break;
		        case "NetStream.Failed":
			        Debug.error("NetStream Failed");
			        break;
		        case "NetStream.Play.Start":
			        Debug.info("NetStream playing started");
			        this.setAttribute('playing',true);
			        break;
		        case "NetStream.Play.Stop":
			        Debug.info("NetStream play stopped");
			        break;
		        case "NetStream.Play.Failed":
			        Debug.error("NetStream playing failed");
			        break;
		        case "NetStream.Play.StreamNotFound":
			        Debug.warn("No stream to play");
			        break;
		        case "NetStream.Publish.BadName":
			        Debug.error("Please check the name of the publishing stream" );
			        break;
	        }
		</method>
		
		<method name="onPlayStatus" args="event">
			switch (event.info.code) {
		        case "NetStream.Play.Switch":
					Debug.info("The subscriber is switching from one stream to another in a playlist.");
					break;
		        case "NetStream.Play.Complete":
			        Debug.info("Playback has completed.");
			        break;
			}
		</method>
		
		<method name="closeStream">
	        Debug.write("closing the stream");
	        this.stream.close();
        </method>
        
        <!--publishing the stream object-->
        <method name="publishVideo" args="streamName">	
	        var camera= Camera.getCamera();
	        var microphone= Microphone.getMicrophone();
	        camera.setMode(220, 200, 15);
	        camera.setQuality(0,80);
	        this.stream.attachAudio(microphone);
	        this.stream.attachCamera(camera);	        
			this.stream.publish(streamName,"live");
			
			//Debug.write("bandwidth : %w",camera.bandwidth);
			//Debug.write("currentFPS : %w",camera.currentFPS);
			//Debug.write("fps : %w",camera.fps);
			//Debug.write("keyFrameInterval : %w",camera.keyFrameInterval);
			//Debug.write("width : %w",camera.width);
			//Debug.write("height : %w",camera.height);			
        </method>
        
        <!--playing the stream object on the videoview-->
        <method name="playVideo" args="streamName">
	        this.stream.play(streamName);
	        //live._attachStream(stream2);
        </method>
		
        <method name="playRecord" args="recordName">
        	this.stream.play(recordName);
        </method>		
	</class>	
</library>