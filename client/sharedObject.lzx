<library>
	<include href="chatView.lzx"/>
	<class name="sharedObject" extends="node">
		<switch>
			<when property="$as3">
				<passthrough>
					import flash.net.*;
					import flash.events.*;
				</passthrough>
			</when>
		</switch>	
	
		<attribute name="so" value="null" /> <!--shared object object-->
		<attribute name="onStatus" value="null" /> 
		<attribute name="usernameList" value="null"/> <!--array for usernames-->
		
		<handler name="oninit">
			usernameList= [];
		</handler>
		
		<!--getting Shared Object from server
		@param so_Name : shared Object name  
		@param nc : connection which has the chared object
		@persistant : persistency <true | flase>
		-->
		<method name="connect" args="so_Name,nc,persistant">
	
			//Debug.write("connect SharedObject: ",nc.uri);
			this.so = SharedObject.getRemote(so_Name,nc.uri,persistant); 
			this.so.client=this;
			var t = this;
			if ($swf8){
				this.so.onSync = function (evtObj){
				if (t.onStatus)t.onStatus.sendEvent(evtObj);
				//_root.Debug.write.write("Shared Object onSync",evtObj,arguments);
				}
				this.so.writeMessage= function (msg) {
				Debug.debug(msg);
				}
			}			
			this.so.connect(nc);
		</method>
		
		<!--will be shown to all clients who got the chat shared object -->
		<method name="writeMessage" args="username, msg">
			//Debug.debug(msg);
			messageArea.addText(username+ " : "+msg+"\n");
		</method>
		
	    <method name="getRemote" args="so_Name,nc,persistant">
	
	        //Debug.write("connect SharedObject: ",nc.uri);
	        this.so = SharedObject.getRemote(so_Name,nc.uri,persistant); 
	
	        var t = this;
	        this.so.onSync = function (evtObj){
	            if (t.onStatus)t.onStatus.sendEvent(evtObj);
	            //_root.Debug.write.write("Shared Object onSync",evtObj,arguments);
	        }
	    </method>
	    
	    <!--- create Object if not existing  -->
	    <method name="getLocal" args="name">
	
	        this.so = SharedObject.getLocal(name); 
	
	        var t = this;
	        this.so.onSync = function (evtObj){
	            if (t.onStatus)t.onStatus.sendEvent(evtObj);
	            //_root.Debug.write.write("Shared Object onSync",evtObj,arguments);
	        }	        
	    </method>
	    
	    <!--- 
	        force write to disk
	        @return true(success) false(User has forbidden to store data local)
	      -->
	    <method name="flush">
	        return this.so.flush();
	    </method>
	
	    <method name="getData" args="key">
	        if (this.so.data["key"] == undefined){
	            return null;
	           //_root.Debug.write.write("key undefined",key);
	        } else {
	            return this.so.data["key"];
	        }
	    </method>
	        
		<!--call the "send" method of flash.net.SharedObject method with given funcname and parameters-->
		<method name="send" args="funcName,param1,param2">
			return this.so.send(funcName,param1,param2);
		</method>
		
		<!--gets the incoming usernames from the serverside method-->
		<method name="receiveUsername" args="username1,username2=null,username3=null">
			<![CDATA[
			usernameList= [username1,username2,username3];
			for (var i=0; i<usernameList.length; i++) {
				Debug.info("username [%w] is  : %w",i+1,usernameList[i]);
			}
			]]>
		</method>
						
	</class>

</library>